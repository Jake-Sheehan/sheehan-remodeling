---
import Card from "./Card.astro";
import { contentful_client } from "../lib/contentful";
import type { EntryFieldTypes } from "contentful";

interface Props {
    contentful_id: string;
}

interface CardSkeleton {
    contentTypeId: "serviceCard";
    fields: {
        title: EntryFieldTypes.Text;
        cardImage: EntryFieldTypes.AssetLink;
        link: EntryFieldTypes.Text;
    };
}

interface DeckSeleton {
    contentTypeId: "serviceDeck";
    fields: {
        defaultImage: EntryFieldTypes.AssetLink;
        cards: EntryFieldTypes.Array<EntryFieldTypes.EntryLink<CardSkeleton>>;
    };
}
const { contentful_id } = Astro.props;

const data =
    await contentful_client.withoutUnresolvableLinks.getEntry<DeckSeleton>(
        contentful_id,
    );

const { defaultImage, cards } = data.fields;
const img_url = `https:${defaultImage?.fields.file?.url ?? "//picsum.photos/1920/1080"}`;
---

<section id="deck" class="full-width">
    <ul
        x-data=`{ bgUrl: "${img_url}"}`
        @mouseleave=`bgUrl = "${img_url}"`
        :style="`background: url(${bgUrl}), var(--primary); background-size: cover; background-repeat: no-repeat; background-position: 50% 50%;`"
    >
        {
            cards.map((card) => {
                return (
                    <Card
                        title={card?.fields.title ?? "title"}
                        img_url={
                            card?.fields.cardImage?.fields?.file?.url ??
                            "picsum.photos/1920/1080"
                        }
                        link={card?.fields.link ?? "/"}
                    />
                );
            })
        }
    </ul>
</section>

<style>
    ul {
        width: 100%;
        display: flex;
        flex-flow: row wrap;
        background-blend-mode: overlay;
    }

    ul > :global(li) {
        flex-basis: 100%;
    }

    ul > :global(li) {
        border-bottom: 1px solid var(--color-border-light);
    }

    @media only screen and (min-width: 1200px) {
        ul > :global(li) {
            flex-basis: 33.33333%;
        }

        ul > :global(li:not(:nth-child(3n))) {
            border-right: 1px solid var(--color-border-light);
        }
    }
</style>
